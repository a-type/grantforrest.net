{"version":3,"sources":["webpack:///./src/templates/Blog.tsx","webpack:///./config/site.ts","webpack:///./src/components/Summary.tsx","webpack:///./config/theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/components/Link.tsx","webpack:///./src/components/SingleColumn.tsx","webpack:///./src/components/index.tsx"],"names":["BlogPage","render","_this$props$pageConte","this","props","pageContext","currentPage","totalPages","_data$allMarkdownRema","data","allMarkdownRemark","edges","totalCount","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","title","config","siteTitle","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","grommet__WEBPACK_IMPORTED_MODULE_5__","level","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","category","key","url","React","Component","BlogQuery","__webpack_exports__","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","defaultBg","favicon","siteDescription","author","siteLogo","themeColor","backgroundColor","POST_PER_PAGE","Summary","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","react_default","Box","margin","top","Heading","Link","kebabCase","Paragraph","PureComponent","theme","global","font","family","size","height","colors","brand","button","border","color","radius","width","heading","weight","paragraph","medium","maxWidth","GlobalStyle","createGlobalStyle","_templateObject","Footer","styled","footer","withConfig","displayName","componentId","Layout","children","gatsby_browser_entry","query","Grommet","full","split","site","buildTime","_1536950682","PrevNext","prev","next","vertical","SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","Pagination","isFirst","isLast","prevPage","toString","nextPage","className","rel","Array","from","length","_","i","GatsbyLink","SingleColumn","_ref","ResponsiveContext","Consumer","align","pad","__webpack_require__","d","Summary_Summary","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Pagination_Pagination","SingleColumn_SingleColumn"],"mappings":"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","file":"component---src-templates-blog-tsx-c077cf58f1d288b6e081.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { Layout, Summary, Pagination, SingleColumn } from '../components';\nimport { Heading } from 'grommet';\nimport Helmet from 'react-helmet';\nimport config from '../../config/site';\nimport Data from '../models/Data';\n\ninterface Props {\n  data: Data;\n  pageContext: {\n    currentPage: number;\n    totalPages: number;\n  };\n}\n\nexport default class BlogPage extends React.Component<Props> {\n  public render() {\n    const { currentPage, totalPages } = this.props.pageContext;\n\n    const { data } = this.props;\n    const { edges, totalCount } = data.allMarkdownRemark;\n\n    return (\n      <Layout>\n        <SingleColumn>\n          <Helmet title={`Posts | ${config.siteTitle}`} />\n          <header>\n            <Link to=\"/\">{config.siteTitle}</Link>\n            <Heading level=\"2\">Latest stories ({totalCount})</Heading>\n          </header>\n          <div>\n            {edges.map(post => (\n              <Summary\n                title={post.node.frontmatter.title}\n                date={post.node.frontmatter.date}\n                excerpt={post.node.excerpt}\n                timeToRead={post.node.timeToRead}\n                slug={post.node.fields.slug}\n                category={post.node.frontmatter.category}\n                key={post.node.fields.slug}\n              />\n            ))}\n            <Pagination currentPage={currentPage} totalPages={totalPages} url={'blog'} />\n          </div>\n        </SingleColumn>\n      </Layout>\n    );\n  }\n}\nexport const BlogQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: $limit, skip: $skip) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            category\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Grant Forrest', // Navigation and Site Title\n  siteTitleAlt: \"Grant Forrest's Blog\", // Alternative Site title for SEO\n  siteUrl: 'http://grantforrest.net', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/assets/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  defaultBg: '/assets/bg.png', // default post background header\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: \"Grant Forrest's Blog\", // Your site description\n  author: 'Grant Forrest', // Author for schemaORGJSONLD\n  siteLogo: '/assets/logo.png', // Image for schemaORGJSONLD\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  POST_PER_PAGE: 4,\n};\n","import React from 'react';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Heading, Paragraph, Box } from 'grommet';\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Summary extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n\n    return (\n      <Box margin={{ top: 'medium' }}>\n        <Heading level=\"3\">\n          <Link to={`/blog/${slug}`}>{title}</Link>\n        </Heading>\n        <i>\n          {date} &mdash; {timeToRead} Min Read &mdash; In <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n        </i>\n        <Paragraph>{excerpt}</Paragraph>\n      </Box>\n    );\n  }\n}\n","export default {\n  global: {\n    font: {\n      family: '\"Noto Serif\", serif',\n      size: '14px',\n      height: '20px',\n    },\n    colors: {\n      brand: '#323242',\n    },\n  },\n\n  button: {\n    border: {\n      color: 'black',\n      radius: '0',\n      width: '1px',\n    },\n  },\n\n  heading: {\n    font: {\n      //family: \"\",\n    },\n    weight: 200,\n  },\n\n  paragraph: {\n    medium: {\n      maxWidth: '720px',\n      height: '32px',\n    },\n  },\n};\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport split from 'lodash/split';\nimport { Grommet } from 'grommet';\nimport theme from '../../config/theme';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    overflow-y: hidden !important;\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nexport class Layout extends React.PureComponent<{}> {\n  public render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query LayoutQuery {\n            site {\n              buildTime(formatString: \"DD.MM.YYYY\")\n            }\n          }\n        `}\n        render={data => (\n          <Grommet theme={theme} full>\n            <GlobalStyle />\n            {children}\n            <Footer>\n              &copy; {split(data.site.buildTime, '.')[2]} Grant Forrest. All rights reserved. <br />\n            </Footer>\n          </Grommet>\n        )}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport Post from '../models/Post';\nimport { Box } from 'grommet';\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Box margin={{ vertical: 'small' }}>\n        <div>\n          <label>Previous: </label>\n          {prev ? <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n        <div>\n          <label>Next: </label>\n          {next ? <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n      </Box>\n    );\n  }\n}\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../config/site';\nimport Post from '../models/Post';\n\ninterface SEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: SEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD: any[] = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  );\n};\n","import React from 'react';\nimport { Link } from '../components';\n\ninterface Props {\n  currentPage: number;\n  totalPages: number;\n  url: string;\n}\n\nexport class Pagination extends React.PureComponent<Props> {\n  public render() {\n    const { currentPage, totalPages, url } = this.props;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === totalPages;\n    const prevPage = currentPage - 1 === 1 ? `/${url}/` : `/${url}/${(currentPage - 1).toString()}`;\n    const nextPage = `/${url}/${(currentPage + 1).toString()}`;\n    return totalPages > 1 ? (\n      <div>\n        {!isFirst && (\n          <Link className=\"prev page-numbers\" to={prevPage} rel=\"prev\">\n            ← Prev\n          </Link>\n        )}\n        {Array.from({ length: totalPages }, (_, i) => (\n          <Link\n            className={currentPage === i + 1 ? 'page-numbers current' : 'page-numbers'}\n            key={`pagination-number${i + 1}`}\n            to={`/${url}/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n        {!isLast && (\n          <Link className=\"next page-numbers\" to={nextPage} rel=\"next\">\n            Next →\n          </Link>\n        )}\n      </div>\n    ) : null;\n  }\n}\n","import styled from 'styled-components';\nimport { Link as GatsbyLink } from 'gatsby';\n\nexport const Link = styled(GatsbyLink)`\n  color: #323242;\n  text-decoration: underline;\n`;\n\nexport const WrapLink = styled(GatsbyLink)`\n  text-decoration: none;\n  color: inherit;\n`;\n","import React, { SFC } from 'react';\nimport { Box, ResponsiveContext } from 'grommet';\n\nexport const SingleColumn: SFC<{}> = ({ children }) => (\n  <ResponsiveContext.Consumer>\n    {size => (\n      <Box align=\"center\">\n        <Box pad={size !== 'small' ? 'large' : 'medium'}>{children}</Box>\n      </Box>\n    )}\n  </ResponsiveContext.Consumer>\n);\n","export * from './Summary';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SEO';\nexport * from './Pagination';\nexport * from './Link';\nexport * from './SingleColumn';\n"],"sourceRoot":""}