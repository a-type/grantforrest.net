{"version":3,"sources":["webpack:///./src/templates/AllCategory.tsx","webpack:///./config/site.ts","webpack:///./src/components/Summary.tsx","webpack:///./config/theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/components/Link.tsx","webpack:///./src/components/SingleColumn.tsx","webpack:///./src/components/index.tsx"],"names":["AllCategoryTemplate","render","categories","this","props","pathContext","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","config","siteTitle","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","grommet__WEBPACK_IMPORTED_MODULE_7__","level","map","category","index","key","kebabCase","React","PureComponent","__webpack_exports__","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","defaultBg","favicon","siteDescription","author","siteLogo","themeColor","backgroundColor","POST_PER_PAGE","Summary","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","date","excerpt","slug","timeToRead","react_default","Box","margin","top","Heading","Link","Paragraph","theme","global","font","family","size","height","colors","brand","button","border","color","radius","width","heading","weight","paragraph","medium","maxWidth","GlobalStyle","createGlobalStyle","_templateObject","Footer","styled","footer","withConfig","displayName","componentId","Layout","children","gatsby_browser_entry","query","data","Grommet","full","split","site","buildTime","_1536950682","PrevNext","prev","next","vertical","frontmatter","SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","Pagination","currentPage","totalPages","isFirst","isLast","prevPage","toString","nextPage","className","rel","Array","from","length","_","i","GatsbyLink","SingleColumn","_ref","ResponsiveContext","Consumer","align","pad","__webpack_require__","d","Summary_Summary","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Pagination_Pagination","SingleColumn_SingleColumn"],"mappings":"wPAUqBA,4FACZC,kBAAS,IACNC,EAAeC,KAAKC,MAAMC,YAA1BH,WACR,GAAIA,EACF,OACEI,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAK,gBAAkBC,IAAOC,YACtCP,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAG,KAAKH,IAAOC,WACrBP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,MAAM,KAAf,eAEFX,EAAAC,EAAAC,cAAA,WACGN,EAAWgB,IAAI,SAACC,EAAUC,GAAX,OACdd,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASK,IAAKD,GACZd,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAE,eAAiBO,IAAUH,IAAcA,aAflBI,IAAMC,iDCVxCC,EAAA,GACbC,WAAY,IAEZb,UAAW,gBACXc,aAAc,uBACdC,QAAS,0BACTC,aAAc,KACdC,WAAY,qBACZC,UAAW,iBACXC,QAAS,kBACTC,gBAAiB,uBACjBC,OAAQ,gBACRC,SAAU,mBAIVC,WAAY,UACZC,gBAAiB,UAEjBC,cAAe,wLCJJC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAAtC,KAAAuC,YAAAvC,KAAA,OAAAwC,IAAAJ,EAAAC,GAAAD,EAAAK,UACS3C,OADT,WACkB,IAAA4C,EAC+C1C,KAAKC,MAA1DO,EADMkC,EACNlC,MAAOmC,EADDD,EACCC,KAAMC,EADPF,EACOE,QAASC,EADhBH,EACgBG,KAAMC,EADtBJ,EACsBI,WAAY9B,EADlC0B,EACkC1B,SAEhD,OACE+B,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAKC,OAAQ,CAAEC,IAAK,WAClBH,EAAA3C,EAAAC,cAAC8C,EAAA,EAAD,CAASrC,MAAM,KACbiC,EAAA3C,EAAAC,cAAC+C,EAAD,CAAMxC,GAAE,SAAWiC,GAASrC,IAE9BuC,EAAA3C,EAAAC,cAAA,SACGsC,EADH,MACkBG,EADlB,kBACkDC,EAAA3C,EAAAC,cAAC+C,EAAD,CAAMxC,GAAE,eAAiBO,IAAUH,IAAcA,IAEnG+B,EAAA3C,EAAAC,cAACgD,EAAA,EAAD,KAAYT,KAZpBR,EAAA,CAA6BhB,IAAMC,oFCfpBiC,EAAA,CACbC,OAAQ,CACNC,KAAM,CACJC,OAAQ,sBACRC,KAAM,OACNC,OAAQ,QAEVC,OAAQ,CACNC,MAAO,YAIXC,OAAQ,CACNC,OAAQ,CACNC,MAAO,QACPC,OAAQ,IACRC,MAAO,QAIXC,QAAS,CACPX,KAAM,GAGNY,OAAQ,KAGVC,UAAW,CACTC,OAAQ,CACNC,SAAU,QACVZ,OAAQ,4MCvBd,IAAMa,EAAcC,YAAHC,KAQXC,EAASC,IAAOC,OAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,+DAQCK,EAAb,SAAA5C,GAAA,SAAA4C,IAAA,OAAA5C,EAAAC,MAAAtC,KAAAuC,YAAAvC,KAAA,OAAAwC,IAAAyC,EAAA5C,GAAA4C,EAAAxC,UACS3C,OADT,WACkB,IACNoF,EAAalF,KAAKC,MAAlBiF,SAER,OACEnC,EAAA3C,EAAAC,cAAC8E,EAAA,YAAD,CACEC,MAAK,aAOLtF,OAAQ,SAAAuF,GAAI,OACVtC,EAAA3C,EAAAC,cAACiF,EAAA,EAAD,CAAShC,MAAOA,EAAOiC,MAAI,GACzBxC,EAAA3C,EAAAC,cAACmE,EAAD,MACCU,EACDnC,EAAA3C,EAAAC,cAACsE,EAAD,UACUa,IAAMH,EAAKI,KAAKC,UAAW,KAAK,GAD1C,wCACkF3C,EAAA3C,EAAAC,cAAA,cAbxFgF,KAAAM,KALNV,EAAA,CAA4B7D,IAAMC,eCZrBuE,EAAb,SAAAvD,GAAA,SAAAuD,IAAA,OAAAvD,EAAAC,MAAAtC,KAAAuC,YAAAvC,KAAA,OAAAwC,IAAAoD,EAAAvD,GAAAuD,EAAAnD,UACS3C,OADT,WACkB,IAAA4C,EACS1C,KAAKC,MAApB4F,EADMnD,EACNmD,KAAMC,EADApD,EACAoD,KACd,OACE/C,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAKC,OAAQ,CAAE8C,SAAU,UACvBhD,EAAA3C,EAAAC,cAAA,WACE0C,EAAA3C,EAAAC,cAAA,2BACCwF,EAAO9C,EAAA3C,EAAAC,cAAC+C,EAAD,CAAMxC,GAAE,SAAWO,IAAU0E,EAAKG,YAAYxF,QAAWqF,EAAKG,YAAYxF,OAAgBuC,EAAA3C,EAAAC,cAAA,qBAEpG0C,EAAA3C,EAAAC,cAAA,WACE0C,EAAA3C,EAAAC,cAAA,uBACCyF,EAAO/C,EAAA3C,EAAAC,cAAC+C,EAAD,CAAMxC,GAAE,SAAWO,IAAU2E,EAAKE,YAAYxF,QAAWsF,EAAKE,YAAYxF,OAAgBuC,EAAA3C,EAAAC,cAAA,uBAX5GuF,EAAA,CAA8BxE,IAAMC,0CCCvB4E,EAAM,SAAChG,GAAe,IAE7BO,EACA0F,EACAC,EACAC,EAJIC,EAAgCpG,EAAhCoG,SAAUC,EAAsBrG,EAAtBqG,SAAUC,EAAYtG,EAAZsG,QAKtBC,EAAmC,MAAtB/F,IAAOc,WAAqB,GAAKd,IAAOc,WACvDgF,GAEF/F,EADiB6F,EAASL,YACTxF,MACjB0F,EAAcG,EAASzD,QACvBuD,EAAQ1F,IAAOkB,WACfyE,EAAU3F,IAAOgB,QAAU+E,EAAaF,IAExC9F,EAAQC,IAAOC,UACfwF,EAAczF,IAAOqB,gBACrBqE,EAAQ1F,IAAOkB,YAEjBwE,EAAQ1F,IAAOgB,QAAU+E,EAAaL,EACtC,IAAMM,EAAUhG,IAAOgB,QAAUhB,IAAOc,WACpCmF,EAAkB,CACpB,CACEC,WAAY,oBACZC,QAAS,UACTC,MAAOJ,EACPK,IAAKL,EACLM,KAAMvG,EACNwG,cAAevG,IAAOe,aAAef,IAAOe,aAAe,KA0C/D,OAvCI+E,IACFG,EAAkB,CAChB,CACEC,WAAY,oBACZC,QAAS,cAETC,MAAOT,EAEPU,IAAKV,EACLW,KAAMvG,EACNwG,cAAevG,IAAOe,aAAef,IAAOe,aAAe,GAC3DyF,SAAUzG,EACV2F,MAAO,CACLS,QAAS,cACTE,IAAKX,GAEPD,YAAazF,IAAOqB,gBACpBoF,cAAeb,EAASL,YAAYrD,KACpCwE,aAAcd,EAASL,YAAYrD,KACnCZ,OAAQ,CACN6E,QAAS,SACTG,KAAMtG,IAAOsB,QAEfqF,UAAW,CACTR,QAAS,eACTG,KAAMtG,IAAOsB,OACbsF,KAAM,CACJT,QAAS,cACTE,IAAKrG,IAAOgB,QAAU+E,EAAa/F,IAAOuB,WAG9CsF,SAAUb,EACVc,iBAAkB,CAChBX,QAAS,UACTC,MAAOJ,MAMb1D,EAAA3C,EAAAC,cAACmH,EAAApH,EAAD,KACE2C,EAAA3C,EAAAC,cAAA,QAAMoH,KAAMhH,IAAOiB,eACnBqB,EAAA3C,EAAAC,cAAA,aAAQI,IAAOC,WACfqC,EAAA3C,EAAAC,cAAA,QAAM0G,KAAK,cAAcW,QAASxB,IAClCnD,EAAA3C,EAAAC,cAAA,QAAM0G,KAAK,QAAQW,QAASvB,IAC5BpD,EAAA3C,EAAAC,cAAA,UAAQsH,KAAK,uBAAuBC,KAAKC,UAAUnB,IACnD3D,EAAA3C,EAAAC,cAAA,QAAMyH,SAAS,SAASJ,QAASnB,EAAUH,EAAUK,IACpDF,EAAUxD,EAAA3C,EAAAC,cAAA,QAAMyH,SAAS,UAAUJ,QAAQ,YAAe,KAC3D3E,EAAA3C,EAAAC,cAAA,QAAMyH,SAAS,WAAWJ,QAASlH,IACnCuC,EAAA3C,EAAAC,cAAA,QAAMyH,SAAS,iBAAiBJ,QAASxB,IACzCnD,EAAA3C,EAAAC,cAAA,QAAMyH,SAAS,WAAWJ,QAASvB,MCnF5B4B,8BAAb,SAAA1F,GAAA,SAAA0F,IAAA,OAAA1F,EAAAC,MAAAtC,KAAAuC,YAAAvC,KAAA,OAAAwC,IAAAuF,EAAA1F,GAAA0F,EAAAtF,UACS3C,OADT,WACkB,IAAA4C,EAC2B1C,KAAKC,MAAtC+H,EADMtF,EACNsF,YAAaC,EADPvF,EACOuF,WAAYnB,EADnBpE,EACmBoE,IAC3BoB,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAApB,IAA4BlB,EAA5B,QAAyCA,EAAzC,KAAiDkB,EAAc,GAAGK,WAC7EC,EAAQ,IAAOxB,EAAP,KAAekB,EAAc,GAAGK,WAC9C,OAAOJ,EAAa,EAClBlF,EAAA3C,EAAAC,cAAA,YACI6H,GACAnF,EAAA3C,EAAAC,cAAC+C,EAAD,CAAMmF,UAAU,oBAAoB3H,GAAIwH,EAAUI,IAAI,QAAtD,UAIDC,MAAMC,KAAK,CAAEC,OAAQV,GAAc,SAACW,EAAGC,GAAJ,OAClC9F,EAAA3C,EAAAC,cAAC+C,EAAD,CACEmF,UAAWP,IAAgBa,EAAI,EAAI,uBAAyB,eAC5D3H,IAAG,qBAAsB2H,EAAI,GAC7BjI,GAAE,IAAMkG,EAAN,KAAmB,IAAN+B,EAAU,GAAKA,EAAI,IAEjCA,EAAI,MAGPV,GACApF,EAAA3C,EAAAC,cAAC+C,EAAD,CAAMmF,UAAU,oBAAoB3H,GAAI0H,EAAUE,IAAI,QAAtD,WAKF,MA7BRT,EAAA,CAAgC3G,IAAMC,gBCNzB+B,EAAOwB,YAAOkE,QAAVhE,WAAA,CAAAC,YAAA,OAAAC,YAAA,YAAGJ,CAAH,iDAKOA,YAAOkE,QAAVhE,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,iDCLRmE,EAAwB,SAAAC,GAAA,IAAG9D,EAAH8D,EAAG9D,SAAH,OACnCnC,EAAA3C,EAAAC,cAAC4I,EAAA,EAAkBC,SAAnB,KACG,SAAAxF,GAAI,OACHX,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAKmG,MAAM,UACTpG,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAKoG,IAAc,UAAT1F,EAAmB,QAAU,UAAWwB,OCP1DmE,EAAAC,EAAAhI,EAAA,sBAAAiI,IAAAF,EAAAC,EAAAhI,EAAA,sBAAAkI,IAAAH,EAAAC,EAAAhI,EAAA,sBAAAmI,IAAAJ,EAAAC,EAAAhI,EAAA,sBAAAoI,IAAAL,EAAAC,EAAAhI,EAAA,sBAAAqI,IAAAN,EAAAC,EAAAhI,EAAA,sBAAA8B,IAAAiG,EAAAC,EAAAhI,EAAA,sBAAAsI","file":"component---src-templates-all-category-tsx-cf1fc029a60ddbaf9957.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport { Layout, SingleColumn } from '../components';\nimport { Heading } from 'grommet';\n\nimport config from '../../config/site';\nimport PageProps from '../models/PageProps';\n\nexport default class AllCategoryTemplate extends React.PureComponent<PageProps> {\n  public render() {\n    const { categories } = this.props.pathContext;\n    if (categories) {\n      return (\n        <Layout>\n          <SingleColumn>\n            <Helmet title={`Categories | ${config.siteTitle}`} />\n            <header>\n              <Link to=\"/\">{config.siteTitle}</Link>\n              <Heading level=\"2\">Categories</Heading>\n            </header>\n            <div>\n              {categories.map((category, index: number) => (\n                <Heading key={index}>\n                  <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n                </Heading>\n              ))}\n            </div>\n          </SingleColumn>\n        </Layout>\n      );\n    }\n  }\n}\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Grant Forrest', // Navigation and Site Title\n  siteTitleAlt: \"Grant Forrest's Blog\", // Alternative Site title for SEO\n  siteUrl: 'http://grantforrest.net', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/assets/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  defaultBg: '/assets/bg.png', // default post background header\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: \"Grant Forrest's Blog\", // Your site description\n  author: 'Grant Forrest', // Author for schemaORGJSONLD\n  siteLogo: '/assets/logo.png', // Image for schemaORGJSONLD\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  POST_PER_PAGE: 4,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Heading, Paragraph, Box } from 'grommet';\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Summary extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n\n    return (\n      <Box margin={{ top: 'medium' }}>\n        <Heading level=\"3\">\n          <Link to={`/blog/${slug}`}>{title}</Link>\n        </Heading>\n        <i>\n          {date} &mdash; {timeToRead} Min Read &mdash; In <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n        </i>\n        <Paragraph>{excerpt}</Paragraph>\n      </Box>\n    );\n  }\n}\n","export default {\n  global: {\n    font: {\n      family: '\"Noto Serif\", serif',\n      size: '14px',\n      height: '20px',\n    },\n    colors: {\n      brand: '#323242',\n    },\n  },\n\n  button: {\n    border: {\n      color: 'black',\n      radius: '0',\n      width: '1px',\n    },\n  },\n\n  heading: {\n    font: {\n      //family: \"\",\n    },\n    weight: 200,\n  },\n\n  paragraph: {\n    medium: {\n      maxWidth: '720px',\n      height: '32px',\n    },\n  },\n};\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport split from 'lodash/split';\nimport { Grommet } from 'grommet';\nimport theme from '../../config/theme';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Noto+Serif:200,400');\n\n  html {\n    overflow-y: hidden !important;\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nexport class Layout extends React.PureComponent<{}> {\n  public render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query LayoutQuery {\n            site {\n              buildTime(formatString: \"DD.MM.YYYY\")\n            }\n          }\n        `}\n        render={data => (\n          <Grommet theme={theme} full>\n            <GlobalStyle />\n            {children}\n            <Footer>\n              &copy; {split(data.site.buildTime, '.')[2]} Grant Forrest. All rights reserved. <br />\n            </Footer>\n          </Grommet>\n        )}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport Post from '../models/Post';\nimport { Box } from 'grommet';\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Box margin={{ vertical: 'small' }}>\n        <div>\n          <label>Previous: </label>\n          {prev ? <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n        <div>\n          <label>Next: </label>\n          {next ? <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n      </Box>\n    );\n  }\n}\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../config/site';\nimport Post from '../models/Post';\n\ninterface SEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: SEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  );\n};\n","import React from 'react';\nimport { Link } from '../components';\n\ninterface Props {\n  currentPage: number;\n  totalPages: number;\n  url: string;\n}\n\nexport class Pagination extends React.PureComponent<Props> {\n  public render() {\n    const { currentPage, totalPages, url } = this.props;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === totalPages;\n    const prevPage = currentPage - 1 === 1 ? `/${url}/` : `/${url}/${(currentPage - 1).toString()}`;\n    const nextPage = `/${url}/${(currentPage + 1).toString()}`;\n    return totalPages > 1 ? (\n      <div>\n        {!isFirst && (\n          <Link className=\"prev page-numbers\" to={prevPage} rel=\"prev\">\n            ← Prev\n          </Link>\n        )}\n        {Array.from({ length: totalPages }, (_, i) => (\n          <Link\n            className={currentPage === i + 1 ? 'page-numbers current' : 'page-numbers'}\n            key={`pagination-number${i + 1}`}\n            to={`/${url}/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n        {!isLast && (\n          <Link className=\"next page-numbers\" to={nextPage} rel=\"next\">\n            Next →\n          </Link>\n        )}\n      </div>\n    ) : null;\n  }\n}\n","import styled from 'styled-components';\nimport { Link as GatsbyLink } from 'gatsby';\n\nexport const Link = styled(GatsbyLink)`\n  color: #323242;\n  text-decoration: underline;\n`;\n\nexport const WrapLink = styled(GatsbyLink)`\n  text-decoration: none;\n  color: inherit;\n`;\n","import React, { SFC } from 'react';\nimport { Box, ResponsiveContext } from 'grommet';\n\nexport const SingleColumn: SFC<{}> = ({ children }) => (\n  <ResponsiveContext.Consumer>\n    {size => (\n      <Box align=\"center\">\n        <Box pad={size !== 'small' ? 'large' : 'medium'}>{children}</Box>\n      </Box>\n    )}\n  </ResponsiveContext.Consumer>\n);\n","export * from './Summary';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SEO';\nexport * from './Pagination';\nexport * from './Link';\nexport * from './SingleColumn';\n"],"sourceRoot":""}