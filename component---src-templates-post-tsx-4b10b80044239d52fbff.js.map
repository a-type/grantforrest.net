{"version":3,"sources":["webpack:///./src/templates/Post.tsx","webpack:///./config/site.ts","webpack:///./src/components/Summary.tsx","webpack:///./config/theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/components/Link.tsx","webpack:///./src/components/SingleColumn.tsx","webpack:///./src/components/index.tsx"],"names":["renderAst","Rehype","createElement","React","components","a","Link","h1","Heading","h2","props","react__WEBPACK_IMPORTED_MODULE_3___default","grommet__WEBPACK_IMPORTED_MODULE_7__","Object","assign","level","h3","h4","h5","p","Paragraph","span","Text","Compiler","PostPage","render","_this$props$pathConte","this","pathContext","prev","next","post","data","markdownRemark","_components__WEBPACK_IMPORTED_MODULE_6__","postPath","fields","slug","postNode","postSEO","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","frontmatter","config","siteTitle","to","date","timeToRead","kebabCase","category","htmlAst","tags","map","tag","i","key","length","PureComponent","postQuery","__webpack_exports__","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","defaultBg","favicon","siteDescription","author","siteLogo","themeColor","backgroundColor","POST_PER_PAGE","Summary","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","excerpt","react_default","Box","margin","top","theme","global","font","family","size","height","colors","brand","button","border","color","radius","width","heading","weight","paragraph","medium","maxWidth","GlobalStyle","createGlobalStyle","_templateObject","Footer","styled","footer","withConfig","displayName","componentId","Layout","children","gatsby_browser_entry","query","Grommet","full","split","site","buildTime","_1536950682","PrevNext","vertical","SEO","description","image","postURL","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","Pagination","currentPage","totalPages","isFirst","isLast","prevPage","toString","nextPage","className","rel","Array","from","_","GatsbyLink","SingleColumn","_ref","ResponsiveContext","Consumer","align","pad","__webpack_require__","d","Summary_Summary","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Pagination_Pagination","SingleColumn_SingleColumn"],"mappings":"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","file":"component---src-templates-post-tsx-4b10b80044239d52fbff.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport { Layout, SEO, PrevNext, SingleColumn, Link } from '../components';\nimport { Heading, Paragraph, Text } from 'grommet';\nimport config from '../../config/site';\nimport '../utils/prismjs-theme.css';\nimport PathContext from '../models/PathContext';\nimport Post from '../models/Post';\nimport Rehype from 'rehype-react';\n\nconst renderAst = new Rehype({\n  createElement: React.createElement,\n  components: {\n    a: Link,\n    h1: Heading,\n    h2: props => <Heading {...props} level=\"2\" />,\n    h3: props => <Heading {...props} level=\"3\" />,\n    h4: props => <Heading {...props} level=\"4\" />,\n    h5: props => <Heading {...props} level=\"5\" />,\n    p: Paragraph,\n    span: Text,\n  },\n}).Compiler;\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pathContext: PathContext;\n}\n\nexport default class PostPage extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props.pathContext;\n    const post = this.props.data.markdownRemark;\n    return (\n      <Layout>\n        {post && (\n          <SingleColumn>\n            <SEO postPath={post.fields.slug} postNode={post} postSEO />\n            <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n            <header>\n              <Link to=\"/\">{config.siteTitle}</Link>\n              <Heading level=\"2\">{post.frontmatter.title}</Heading>\n              <i>\n                {post.frontmatter.date} &mdash; {post.timeToRead} Min Read &mdash; In{' '}\n                <Link to={`/categories/${kebabCase(post.frontmatter.category)}`}>{post.frontmatter.category}</Link>\n              </i>\n            </header>\n            <div>\n              {renderAst(post.htmlAst)}\n              {post.frontmatter.tags ? (\n                <i>\n                  Tags: &#160;\n                  {post.frontmatter.tags.map((tag, i) => (\n                    <Link key={i} to={`/tags/${kebabCase(tag)}`}>\n                      <strong>{tag}</strong> {i < post.frontmatter.tags.length - 1 ? `, ` : ``}\n                    </Link>\n                  ))}\n                </i>\n              ) : null}\n              <PrevNext prev={prev} next={next} />\n            </div>\n          </SingleColumn>\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n        category\n        tags\n      }\n      timeToRead\n    }\n  }\n`;\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Grant Forrest', // Navigation and Site Title\n  siteTitleAlt: \"Grant Forrest's Blog\", // Alternative Site title for SEO\n  siteUrl: 'http://grantforrest.net', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/assets/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  defaultBg: '/assets/bg.png', // default post background header\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: \"Grant Forrest's Blog\", // Your site description\n  author: 'Grant Forrest', // Author for schemaORGJSONLD\n  siteLogo: '/assets/logo.png', // Image for schemaORGJSONLD\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  POST_PER_PAGE: 4,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Heading, Paragraph, Box } from 'grommet';\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Summary extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n\n    return (\n      <Box margin={{ top: 'medium' }}>\n        <Heading level=\"3\">\n          <Link to={`/blog/${slug}`}>{title}</Link>\n        </Heading>\n        <i>\n          {date} &mdash; {timeToRead} Min Read &mdash; In <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n        </i>\n        <Paragraph>{excerpt}</Paragraph>\n      </Box>\n    );\n  }\n}\n","export default {\n  global: {\n    font: {\n      family: '\"Noto Serif\", serif',\n      size: '14px',\n      height: '20px',\n    },\n    colors: {\n      brand: '#323242',\n    },\n  },\n\n  button: {\n    border: {\n      color: 'black',\n      radius: '0',\n      width: '1px',\n    },\n  },\n\n  heading: {\n    font: {\n      //family: \"\",\n    },\n    weight: 200,\n  },\n\n  paragraph: {\n    medium: {\n      maxWidth: '720px',\n      height: '32px',\n    },\n  },\n};\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport split from 'lodash/split';\nimport { Grommet } from 'grommet';\nimport theme from '../../config/theme';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Noto+Serif:200,400');\n\n  html {\n    overflow-y: hidden !important;\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nexport class Layout extends React.PureComponent<{}> {\n  public render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query LayoutQuery {\n            site {\n              buildTime(formatString: \"DD.MM.YYYY\")\n            }\n          }\n        `}\n        render={data => (\n          <Grommet theme={theme} full>\n            <GlobalStyle />\n            {children}\n            <Footer>\n              &copy; {split(data.site.buildTime, '.')[2]} Grant Forrest. All rights reserved. <br />\n            </Footer>\n          </Grommet>\n        )}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport Post from '../models/Post';\nimport { Box } from 'grommet';\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Box margin={{ vertical: 'small' }}>\n        <div>\n          <label>Previous: </label>\n          {prev ? <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n        <div>\n          <label>Next: </label>\n          {next ? <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n      </Box>\n    );\n  }\n}\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../config/site';\nimport Post from '../models/Post';\n\ninterface SEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: SEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  );\n};\n","import React from 'react';\nimport { Link } from '../components';\n\ninterface Props {\n  currentPage: number;\n  totalPages: number;\n  url: string;\n}\n\nexport class Pagination extends React.PureComponent<Props> {\n  public render() {\n    const { currentPage, totalPages, url } = this.props;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === totalPages;\n    const prevPage = currentPage - 1 === 1 ? `/${url}/` : `/${url}/${(currentPage - 1).toString()}`;\n    const nextPage = `/${url}/${(currentPage + 1).toString()}`;\n    return totalPages > 1 ? (\n      <div>\n        {!isFirst && (\n          <Link className=\"prev page-numbers\" to={prevPage} rel=\"prev\">\n            ← Prev\n          </Link>\n        )}\n        {Array.from({ length: totalPages }, (_, i) => (\n          <Link\n            className={currentPage === i + 1 ? 'page-numbers current' : 'page-numbers'}\n            key={`pagination-number${i + 1}`}\n            to={`/${url}/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n        {!isLast && (\n          <Link className=\"next page-numbers\" to={nextPage} rel=\"next\">\n            Next →\n          </Link>\n        )}\n      </div>\n    ) : null;\n  }\n}\n","import styled from 'styled-components';\nimport { Link as GatsbyLink } from 'gatsby';\n\nexport const Link = styled(GatsbyLink)`\n  color: #323242;\n  text-decoration: underline;\n`;\n\nexport const WrapLink = styled(GatsbyLink)`\n  text-decoration: none;\n  color: inherit;\n`;\n","import React, { SFC } from 'react';\nimport { Box, ResponsiveContext } from 'grommet';\n\nexport const SingleColumn: SFC<{}> = ({ children }) => (\n  <ResponsiveContext.Consumer>\n    {size => (\n      <Box align=\"center\">\n        <Box pad={size !== 'small' ? 'large' : 'medium'}>{children}</Box>\n      </Box>\n    )}\n  </ResponsiveContext.Consumer>\n);\n","export * from './Summary';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SEO';\nexport * from './Pagination';\nexport * from './Link';\nexport * from './SingleColumn';\n"],"sourceRoot":""}