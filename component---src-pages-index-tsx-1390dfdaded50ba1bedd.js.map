{"version":3,"sources":["webpack:///./node_modules/grommet/es6/components/Grid/StyledGrid.js","webpack:///./node_modules/grommet/es6/components/Grid/Grid.js","webpack:///./src/pages/index.tsx","webpack:///./config/site.ts","webpack:///./src/components/Summary.tsx","webpack:///./config/theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/components/Link.tsx","webpack:///./src/components/SingleColumn.tsx","webpack:///./src/components/index.tsx"],"names":["ALIGN_MAP","center","end","start","stretch","alignStyle","Object","styled_components_browser_esm","props","align","ALIGN_CONTENT_MAP","around","between","alignContentStyle","alignContent","JUSTIFY_MAP","justifyStyle","justify","JUSTIFY_CONTENT_MAP","justifyContentStyle","justifyContent","SIZE_MAP","flex","full","1/2","1/4","2/4","3/4","1/3","2/3","getRepeatSize","size","theme","global","sizeFor","isRow","mapped","fillContainer","console","warn","StyledGrid","div","withConfig","displayName","componentId","styles","fill","areas","Array","isArray","rowsProp","columns","cells","map","forEach","area","row","column","name","r","join","areasStyle","s","count","StyledGrid_columnsStyle","gap","gapSize","edgeSize","gapStyle","StyledGrid_rowsStyle","grid","extend","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","defaultProps","setPrototypeOf","default_props","GridWrapper","rows","tag","as","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","react_default","a","createElement","available","window","CSS","supports","IndexPage","render","_data$allMarkdownRema","data","allMarkdownRemark","edges","totalCount","components","Helmet_default","title","config","siteTitle","ResponsiveContext","Consumer","Box","gridArea","background","pad","Heading","Paragraph","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","category","to","React","Component","IndexQuery","__webpack_exports__","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","defaultBg","favicon","siteDescription","author","siteLogo","themeColor","backgroundColor","POST_PER_PAGE","Summary","_React$PureComponent","inheritsLoose_default","_this$props","margin","top","level","Link","kebabCase","PureComponent","font","family","height","colors","brand","button","border","color","radius","width","heading","weight","paragraph","medium","maxWidth","GlobalStyle","createGlobalStyle","_templateObject","Footer","styled","footer","Layout","children","gatsby_browser_entry","query","Grommet","split","site","buildTime","_1536950682","PrevNext","prev","next","vertical","SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","lang","content","type","JSON","stringify","property","Pagination","currentPage","totalPages","isFirst","isLast","prevPage","toString","nextPage","className","rel","from","_","GatsbyLink","SingleColumn","_ref","__webpack_require__","d","Summary_Summary","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Pagination_Pagination","SingleColumn_SingleColumn"],"mappings":"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","file":"component---src-pages-index-tsx-1390dfdaded50ba1bedd.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { genericStyles } from '../../utils';\nimport { defaultProps } from '../../default-props';\n\nvar fillStyle = function fillStyle(fill) {\n  if (fill === 'horizontal') {\n    return 'width: 100%;';\n  }\n\n  if (fill === 'vertical') {\n    return 'height: 100%;';\n  }\n\n  if (fill) {\n    return \"\\n      width: 100%;\\n      height: 100%;\\n    \";\n  }\n\n  return undefined;\n};\n\nvar ALIGN_MAP = {\n  center: 'center',\n  end: 'flex-end',\n  start: 'flex-start',\n  stretch: 'stretch'\n};\nvar alignStyle = css([\"align-items:\", \";\"], function (props) {\n  return ALIGN_MAP[props.align];\n});\nvar ALIGN_CONTENT_MAP = {\n  around: 'space-around',\n  between: 'space-between',\n  center: 'center',\n  end: 'flex-end',\n  start: 'flex-start',\n  stretch: 'stretch'\n};\nvar alignContentStyle = css([\"align-content:\", \";\"], function (props) {\n  return ALIGN_CONTENT_MAP[props.alignContent];\n});\nvar JUSTIFY_MAP = {\n  center: 'center',\n  end: 'flex-end',\n  start: 'flex-start',\n  stretch: 'stretch'\n};\nvar justifyStyle = css([\"justify-items:\", \";\"], function (props) {\n  return JUSTIFY_MAP[props.justify];\n});\nvar JUSTIFY_CONTENT_MAP = {\n  around: 'space-around',\n  between: 'space-between',\n  center: 'center',\n  end: 'flex-end',\n  start: 'flex-start',\n  stretch: 'stretch'\n};\nvar justifyContentStyle = css([\"justify-content:\", \";\"], function (props) {\n  return JUSTIFY_CONTENT_MAP[props.justifyContent];\n});\n\nvar gapStyle = function gapStyle(props) {\n  if (typeof props.gap === 'string') {\n    var gapSize = props.theme.global.edgeSize[props.gap];\n    return \"grid-gap: \" + gapSize + \" \" + gapSize + \";\";\n  }\n\n  if (props.gap.row && props.gap.column) {\n    return \"\\n      grid-row-gap: \" + props.theme.global.edgeSize[props.gap.row] + \";\\n      grid-column-gap: \" + props.theme.global.edgeSize[props.gap.column] + \";\\n    \";\n  }\n\n  if (props.gap.row) {\n    return \"\\n      grid-row-gap: \" + props.theme.global.edgeSize[props.gap.row] + \";\\n    \";\n  }\n\n  if (props.gap.column) {\n    return \"\\n      grid-column-gap: \" + props.theme.global.edgeSize[props.gap.column] + \";\\n    \";\n  }\n\n  return '';\n};\n\nvar SIZE_MAP = {\n  flex: '1fr',\n  full: '100%',\n  '1/2': '50%',\n  '1/4': '25%',\n  '2/4': '50%',\n  '3/4': '75%',\n  '1/3': '33.33%',\n  '2/3': '66.66%'\n};\n\nvar getRepeatCount = function getRepeatCount(count) {\n  return typeof count === 'number' ? count : \"auto-\" + count;\n};\n\nvar getRepeatSize = function getRepeatSize(size, theme) {\n  return \"minmax(\" + (theme.global.size[size] || size) + \", 1fr)\";\n};\n\nvar sizeFor = function sizeFor(size, props, isRow) {\n  var mapped = SIZE_MAP[size];\n\n  if (isRow && mapped && (!props.fillContainer || props.fillContainer === 'horizontal')) {\n    console.warn('Grid needs `fill` when using fractional row sizes');\n  }\n\n  return mapped || props.theme.global.size[size] || size;\n};\n\nvar columnsStyle = function columnsStyle(props) {\n  if (Array.isArray(props.columns)) {\n    return css([\"grid-template-columns:\", \";\"], props.columns.map(function (s) {\n      if (Array.isArray(s)) {\n        return \"minmax(\" + sizeFor(s[0], props) + \", \" + sizeFor(s[1], props) + \")\";\n      }\n\n      return sizeFor(s, props);\n    }).join(' '));\n  }\n\n  if (typeof props.columns === 'object') {\n    return css([\"grid-template-columns:repeat( \", \",\", \" );\"], getRepeatCount(props.columns.count), getRepeatSize(props.columns.size, props.theme));\n  }\n\n  return css([\"grid-template-columns:repeat( auto-fill,\", \" );\"], getRepeatSize(props.columns, props.theme));\n};\n\nvar rowsStyle = function rowsStyle(props) {\n  if (Array.isArray(props.rowsProp)) {\n    return css([\"grid-template-rows:\", \";\"], props.rowsProp.map(function (s) {\n      if (Array.isArray(s)) {\n        return \"minmax(\" + sizeFor(s[0], props, true) + \", \" + sizeFor(s[1], props, true) + \")\";\n      }\n\n      return sizeFor(s, props, true);\n    }).join(' '));\n  }\n\n  return css([\"grid-auto-rows:\", \";\"], props.theme.global.size[props.rowsProp]);\n};\n\nvar areasStyle = function areasStyle(props) {\n  // translate areas objects into grid-template-areas syntax\n  if (!Array.isArray(props.rowsProp) || !Array.isArray(props.columns)) {\n    console.warn('Grid `areas` requires `rows` and `columns` to be arrays.');\n  }\n\n  var cells = props.rowsProp.map(function () {\n    return props.columns.map(function () {\n      return '.';\n    });\n  });\n  props.areas.forEach(function (area) {\n    for (var row = area.start[1]; row <= area.end[1]; row += 1) {\n      for (var column = area.start[0]; column <= area.end[0]; column += 1) {\n        cells[row][column] = area.name;\n      }\n    }\n  });\n  return \"grid-template-areas: \" + cells.map(function (r) {\n    return \"\\\"\" + r.join(' ') + \"\\\"\";\n  }).join(' ') + \";\";\n};\n\nvar StyledGrid = styled.div.withConfig({\n  displayName: \"StyledGrid\",\n  componentId: \"sc-1wofa1l-0\"\n})([\"display:grid;box-sizing:border-box;\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"\"], genericStyles, function (props) {\n  return props.fillContainer && fillStyle(props.fillContainer);\n}, function (props) {\n  return props.align && alignStyle;\n}, function (props) {\n  return props.alignContent && alignContentStyle;\n}, function (props) {\n  return props.areas && areasStyle(props);\n}, function (props) {\n  return props.columns && columnsStyle(props);\n}, function (props) {\n  return props.gap && gapStyle(props);\n}, function (props) {\n  return props.justify && justifyStyle;\n}, function (props) {\n  return props.justifyContent && justifyContentStyle;\n}, function (props) {\n  return props.rowsProp && rowsStyle(props);\n}, function (props) {\n  return props.theme.grid && props.theme.grid.extend;\n});\nStyledGrid.defaultProps = {};\nObject.setPrototypeOf(StyledGrid.defaultProps, defaultProps);\nexport { StyledGrid };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { StyledGrid } from './StyledGrid';\n\nvar Grid = function Grid(props) {\n  var fill = props.fill,\n      rows = props.rows,\n      tag = props.tag,\n      as = props.as,\n      rest = _objectWithoutPropertiesLoose(props, [\"fill\", \"rows\", \"tag\", \"as\"]);\n\n  return React.createElement(StyledGrid, _extends({\n    as: !as && tag ? tag : as,\n    fillContainer: fill,\n    rowsProp: rows\n  }, rest));\n};\n\nvar GridDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  GridDoc = require('./doc').doc(Grid); // eslint-disable-line global-require\n}\n\nvar GridWrapper = GridDoc || Grid;\nGridWrapper.available = typeof window !== 'undefined' && window.CSS && window.CSS.supports && window.CSS.supports('display', 'grid');\nexport { GridWrapper as Grid };","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Layout, Summary, Link } from '../components';\nimport PageProps from '../models/PageProps';\nimport Helmet from 'react-helmet';\nimport config from '../../config/site';\nimport { Grid, Box, Heading, Paragraph, ResponsiveContext } from 'grommet';\n\nimport 'typeface-noto-serif';\nimport 'typeface-open-sans';\n\nexport default class IndexPage extends React.Component<PageProps> {\n  public render() {\n    const { data } = this.props;\n    const { edges, totalCount } = data.allMarkdownRemark;\n    return (\n      <Layout>\n        <Helmet title={`Homepage | ${config.siteTitle}`} />\n        <ResponsiveContext.Consumer>\n          {size => (\n            <Grid\n              columns={size !== 'small' ? ['auto', 'fill'] : ['fill']}\n              rows={size !== 'small' ? ['fill'] : ['auto', 'fill']}\n              gap=\"small\"\n              areas={[\n                { name: 'intro', start: [0, 0], end: [0, 0] },\n                { name: 'content', start: size !== 'small' ? [1, 0] : [0, 1], end: size !== 'small' ? [1, 0] : [0, 1] },\n              ]}\n              fill=\"vertical\"\n            >\n              <Box gridArea=\"intro\" background=\"light\" pad=\"medium\" align=\"end\">\n                <Heading>Grant Forrest</Heading>\n                <Paragraph>Updated bi-yearly.</Paragraph>\n              </Box>\n              <Box gridArea=\"content\" background=\"light\" pad=\"medium\">\n                {edges.map(post => (\n                  <Summary\n                    title={post.node.frontmatter.title}\n                    date={post.node.frontmatter.date}\n                    excerpt={post.node.excerpt}\n                    timeToRead={post.node.timeToRead}\n                    slug={post.node.fields.slug}\n                    category={post.node.frontmatter.category}\n                    key={post.node.fields.slug}\n                  />\n                ))}\n                <Paragraph>\n                  <Link to={'/blog'}>All posts ({totalCount})</Link>\n                </Paragraph>\n              </Box>\n            </Grid>\n          )}\n        </ResponsiveContext.Consumer>\n      </Layout>\n    );\n  }\n}\nexport const IndexQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 5) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            category\n          }\n          timeToRead\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Grant Forrest', // Navigation and Site Title\n  siteTitleAlt: \"Grant Forrest's Blog\", // Alternative Site title for SEO\n  siteUrl: 'http://grantforrest.net', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/assets/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  defaultBg: '/assets/bg.png', // default post background header\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: \"Grant Forrest's Blog\", // Your site description\n  author: 'Grant Forrest', // Author for schemaORGJSONLD\n  siteLogo: '/assets/logo.png', // Image for schemaORGJSONLD\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  POST_PER_PAGE: 4,\n};\n","import React from 'react';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Heading, Paragraph, Box } from 'grommet';\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Summary extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n\n    return (\n      <Box margin={{ top: 'medium' }}>\n        <Heading level=\"3\">\n          <Link to={`/blog/${slug}`}>{title}</Link>\n        </Heading>\n        <i>\n          {date} &mdash; {timeToRead} Min Read &mdash; In <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n        </i>\n        <Paragraph>{excerpt}</Paragraph>\n      </Box>\n    );\n  }\n}\n","export default {\n  global: {\n    font: {\n      family: '\"Noto Serif\", serif',\n      size: '14px',\n      height: '20px',\n    },\n    colors: {\n      brand: '#323242',\n    },\n  },\n\n  button: {\n    border: {\n      color: 'black',\n      radius: '0',\n      width: '1px',\n    },\n  },\n\n  heading: {\n    font: {\n      //family: \"\",\n    },\n    weight: 200,\n  },\n\n  paragraph: {\n    medium: {\n      maxWidth: '720px',\n      height: '32px',\n    },\n  },\n};\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport split from 'lodash/split';\nimport { Grommet } from 'grommet';\nimport theme from '../../config/theme';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    overflow-y: hidden !important;\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nexport class Layout extends React.PureComponent<{}> {\n  public render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query LayoutQuery {\n            site {\n              buildTime(formatString: \"DD.MM.YYYY\")\n            }\n          }\n        `}\n        render={data => (\n          <Grommet theme={theme} full>\n            <GlobalStyle />\n            {children}\n            <Footer>\n              &copy; {split(data.site.buildTime, '.')[2]} Grant Forrest. All rights reserved. <br />\n            </Footer>\n          </Grommet>\n        )}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport Post from '../models/Post';\nimport { Box } from 'grommet';\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Box margin={{ vertical: 'small' }}>\n        <div>\n          <label>Previous: </label>\n          {prev ? <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n        <div>\n          <label>Next: </label>\n          {next ? <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n      </Box>\n    );\n  }\n}\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../config/site';\nimport Post from '../models/Post';\n\ninterface SEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: SEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD: any[] = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  );\n};\n","import React from 'react';\nimport { Link } from '../components';\n\ninterface Props {\n  currentPage: number;\n  totalPages: number;\n  url: string;\n}\n\nexport class Pagination extends React.PureComponent<Props> {\n  public render() {\n    const { currentPage, totalPages, url } = this.props;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === totalPages;\n    const prevPage = currentPage - 1 === 1 ? `/${url}/` : `/${url}/${(currentPage - 1).toString()}`;\n    const nextPage = `/${url}/${(currentPage + 1).toString()}`;\n    return totalPages > 1 ? (\n      <div>\n        {!isFirst && (\n          <Link className=\"prev page-numbers\" to={prevPage} rel=\"prev\">\n            ← Prev\n          </Link>\n        )}\n        {Array.from({ length: totalPages }, (_, i) => (\n          <Link\n            className={currentPage === i + 1 ? 'page-numbers current' : 'page-numbers'}\n            key={`pagination-number${i + 1}`}\n            to={`/${url}/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n        {!isLast && (\n          <Link className=\"next page-numbers\" to={nextPage} rel=\"next\">\n            Next →\n          </Link>\n        )}\n      </div>\n    ) : null;\n  }\n}\n","import styled from 'styled-components';\nimport { Link as GatsbyLink } from 'gatsby';\n\nexport const Link = styled(GatsbyLink)`\n  color: #323242;\n  text-decoration: underline;\n`;\n\nexport const WrapLink = styled(GatsbyLink)`\n  text-decoration: none;\n  color: inherit;\n`;\n","import React, { SFC } from 'react';\nimport { Box, ResponsiveContext } from 'grommet';\n\nexport const SingleColumn: SFC<{}> = ({ children }) => (\n  <ResponsiveContext.Consumer>\n    {size => (\n      <Box align=\"center\">\n        <Box pad={size !== 'small' ? 'large' : 'medium'}>{children}</Box>\n      </Box>\n    )}\n  </ResponsiveContext.Consumer>\n);\n","export * from './Summary';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SEO';\nexport * from './Pagination';\nexport * from './Link';\nexport * from './SingleColumn';\n"],"sourceRoot":""}