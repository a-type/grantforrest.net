{"version":3,"sources":["webpack:///./src/templates/Tag.tsx","webpack:///./config/site.ts","webpack:///./src/components/Summary.tsx","webpack:///./config/theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/components/Link.tsx","webpack:///./src/components/SingleColumn.tsx","webpack:///./src/components/index.tsx"],"names":["TagTemplate","render","_this$props$pathConte","this","props","pathContext","posts","tagName","totalCount","length","subline","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","title","config","siteTitle","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","to","grommet__WEBPACK_IMPORTED_MODULE_5__","level","map","post","index","frontmatter","date","excerpt","slug","kebabCase","timeToRead","category","key","React","PureComponent","__webpack_exports__","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","defaultBg","favicon","siteDescription","author","siteLogo","themeColor","backgroundColor","POST_PER_PAGE","Summary","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","react_default","Box","margin","top","Heading","Link","Paragraph","theme","global","font","family","size","height","colors","brand","button","border","color","radius","width","heading","weight","paragraph","medium","maxWidth","GlobalStyle","createGlobalStyle","_templateObject","Footer","styled","footer","withConfig","displayName","componentId","Layout","children","gatsby_browser_entry","query","data","Grommet","full","split","site","buildTime","_1536950682","PrevNext","prev","next","vertical","SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","Pagination","currentPage","totalPages","isFirst","isLast","prevPage","toString","nextPage","className","rel","Array","from","_","i","GatsbyLink","SingleColumn","_ref","ResponsiveContext","Consumer","align","pad","__webpack_require__","d","Summary_Summary","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Pagination_Pagination","SingleColumn_SingleColumn"],"mappings":"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","file":"component---src-templates-tag-tsx-fbf6f7dd38639f97d203.js","sourcesContent":["import React from 'react';\nimport Link from 'gatsby-link';\nimport PageProps from '../models/PageProps';\nimport { Summary, Layout, SingleColumn } from '../components';\nimport { Heading } from 'grommet';\nimport Helmet from 'react-helmet';\nimport config from '../../config/site';\nimport kebabCase from 'lodash/kebabCase';\n\nexport default class TagTemplate extends React.PureComponent<PageProps> {\n  public render() {\n    const { posts, tagName } = this.props.pathContext;\n    const totalCount = posts ? posts.length : 0;\n    const subline = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tagName}\"`;\n\n    return (\n      <Layout>\n        <Helmet title={`${'Tags'} | ${config.siteTitle}`} />\n        <SingleColumn>\n          <header>\n            <Link to=\"/\">{config.siteTitle}</Link>\n            <Heading level=\"2\">Tag &ndash; {tagName}</Heading>\n            <i>\n              {subline} (See <Link to=\"/tags\">all tags</Link>)\n            </i>\n          </header>\n          <div>\n            {posts\n              ? posts.map((post: any, index) => (\n                  <Summary\n                    title={post.frontmatter.title}\n                    date={post.frontmatter.date}\n                    excerpt={post.excerpt}\n                    slug={kebabCase(post.frontmatter.title)}\n                    timeToRead={post.timeToRead}\n                    category={post.frontmatter.category}\n                    key={index}\n                  />\n                ))\n              : null}\n          </div>\n        </SingleColumn>\n      </Layout>\n    );\n  }\n}\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Grant Forrest', // Navigation and Site Title\n  siteTitleAlt: \"Grant Forrest's Blog\", // Alternative Site title for SEO\n  siteUrl: 'http://grantforrest.net', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/assets/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  defaultBg: '/assets/bg.png', // default post background header\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: \"Grant Forrest's Blog\", // Your site description\n  author: 'Grant Forrest', // Author for schemaORGJSONLD\n  siteLogo: '/assets/logo.png', // Image for schemaORGJSONLD\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  POST_PER_PAGE: 4,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Heading, Paragraph, Box } from 'grommet';\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Summary extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n\n    return (\n      <Box margin={{ top: 'medium' }}>\n        <Heading level=\"3\">\n          <Link to={`/blog/${slug}`}>{title}</Link>\n        </Heading>\n        <i>\n          {date} &mdash; {timeToRead} Min Read &mdash; In <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n        </i>\n        <Paragraph>{excerpt}</Paragraph>\n      </Box>\n    );\n  }\n}\n","export default {\n  global: {\n    font: {\n      family: '\"Noto Serif\", serif',\n      size: '14px',\n      height: '20px',\n    },\n    colors: {\n      brand: '#323242',\n    },\n  },\n\n  button: {\n    border: {\n      color: 'black',\n      radius: '0',\n      width: '1px',\n    },\n  },\n\n  heading: {\n    font: {\n      //family: \"\",\n    },\n    weight: 200,\n  },\n\n  paragraph: {\n    medium: {\n      maxWidth: '720px',\n      height: '32px',\n    },\n  },\n};\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport split from 'lodash/split';\nimport { Grommet } from 'grommet';\nimport theme from '../../config/theme';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Noto+Serif:200,400');\n\n  html {\n    overflow-y: hidden !important;\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nexport class Layout extends React.PureComponent<{}> {\n  public render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query LayoutQuery {\n            site {\n              buildTime(formatString: \"DD.MM.YYYY\")\n            }\n          }\n        `}\n        render={data => (\n          <Grommet theme={theme} full>\n            <GlobalStyle />\n            {children}\n            <Footer>\n              &copy; {split(data.site.buildTime, '.')[2]} Grant Forrest. All rights reserved. <br />\n            </Footer>\n          </Grommet>\n        )}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from '../components';\nimport kebabCase from 'lodash/kebabCase';\nimport Post from '../models/Post';\nimport { Box } from 'grommet';\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Box margin={{ vertical: 'small' }}>\n        <div>\n          <label>Previous: </label>\n          {prev ? <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n        <div>\n          <label>Next: </label>\n          {next ? <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link> : <span>None</span>}\n        </div>\n      </Box>\n    );\n  }\n}\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../config/site';\nimport Post from '../models/Post';\n\ninterface SEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: SEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  );\n};\n","import React from 'react';\nimport { Link } from '../components';\n\ninterface Props {\n  currentPage: number;\n  totalPages: number;\n  url: string;\n}\n\nexport class Pagination extends React.PureComponent<Props> {\n  public render() {\n    const { currentPage, totalPages, url } = this.props;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === totalPages;\n    const prevPage = currentPage - 1 === 1 ? `/${url}/` : `/${url}/${(currentPage - 1).toString()}`;\n    const nextPage = `/${url}/${(currentPage + 1).toString()}`;\n    return totalPages > 1 ? (\n      <div>\n        {!isFirst && (\n          <Link className=\"prev page-numbers\" to={prevPage} rel=\"prev\">\n            ← Prev\n          </Link>\n        )}\n        {Array.from({ length: totalPages }, (_, i) => (\n          <Link\n            className={currentPage === i + 1 ? 'page-numbers current' : 'page-numbers'}\n            key={`pagination-number${i + 1}`}\n            to={`/${url}/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n        {!isLast && (\n          <Link className=\"next page-numbers\" to={nextPage} rel=\"next\">\n            Next →\n          </Link>\n        )}\n      </div>\n    ) : null;\n  }\n}\n","import styled from 'styled-components';\nimport { Link as GatsbyLink } from 'gatsby';\n\nexport const Link = styled(GatsbyLink)`\n  color: #323242;\n  text-decoration: underline;\n`;\n\nexport const WrapLink = styled(GatsbyLink)`\n  text-decoration: none;\n  color: inherit;\n`;\n","import React, { SFC } from 'react';\nimport { Box, ResponsiveContext } from 'grommet';\n\nexport const SingleColumn: SFC<{}> = ({ children }) => (\n  <ResponsiveContext.Consumer>\n    {size => (\n      <Box align=\"center\">\n        <Box pad={size !== 'small' ? 'large' : 'medium'}>{children}</Box>\n      </Box>\n    )}\n  </ResponsiveContext.Consumer>\n);\n","export * from './Summary';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SEO';\nexport * from './Pagination';\nexport * from './Link';\nexport * from './SingleColumn';\n"],"sourceRoot":""}